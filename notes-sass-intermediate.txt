////// GRIDS 

cd desktop/adv_css/advanced-css-course/Natours/starter


* :not(:last-child) suedo selector - selects everything except the parameter it's given
    * this case it is everything except the last element

* calc() - css function that allows you to do math, can mix data types (px, rem, % etc)

#clearfix - appends a psuedo element after the parent element to clear floats
    * content must be specified or it will not be displayed
    * display should be set to table 
    * clear property is the piece that clears the float. 

* call mixins with @include name-of-mixin

* attribute selector [] - allows you to select elements based on a certain attribute 
    * can select based on certain words in a class or id as well 
    * ^ means to select everything that begins with whatever is specified 
    * [class^="col-"] -- means to select all classes that begins with col-
    * [class*="col-"] -- means to select everything that contains col-
    * [class$="col-"] -- means to select everything that ends with col-


* HOW TO CREATE LIVE TEXT WITH GRADIENT 
    * set gradient 
    background-image: linear-gradient(to right, $color-primary-light, $color-primary-dark);
    * clip background so it only is where text is
    background-clip: text;
    -webkit-background-clip: text;
    * make text color transparent so the gradient shines through
    color: transparent;


* UTILITIE CLASSES

    * simple css classes that only have one goal 

* SASS SELECTOR & < * - means to select all direct childern of an element 

* the lower the number in perspective the more dramatic the effect


* blend an image and a gradient 

background-blend-mode: screen;

background-image: 
            linear-gradient(to right bottom, $color-secondary-light, $color-secondary-dark),
            url(../img/nat-5.jpg);

* shape-outside: circle(50% at 50% 50%) <- can be used to make text wrap around in a circular way, must have defined width and height

* best way to move floated elements is to use transform instead of margins or float

RESPONSIVE IMAGES

RESOLUTION SWITCHING 

* browser knows it's view port width and it knows the PX density of the screen
* uses two images with different widths and tells browser their widths with html in the srcset attr, before it loads them
* uses normal src as a fallback if browser can't do this
* uses sizes element to tell browser how wide the images are certain view port widths
* browser can decide which image to load based on it's px density and VP width

                            <img srcset="img/nat-1.jpg 300w, img/nat-1-large.jpg 1000w" 
                                 src="img/nat-1-large.jpg"
                                 size="(max-width: 900px) 20vw, (max-width: 600px) 30vw, 300px"
                                 alt="1"    
                                 class="comp__photo comp__photo--p1">



DENSITY SWITCHING

* serving an image based on the pixel density of a screen
* uses 1x and 2x to determine what screen resolution is being used
* done in html, easiest 

                    <img srcset="img/logo-green-1x.png 1x, img/logo-green-2x.png 2x" alt="blahbalj">


ART DIRECTION

* serving a completly different image for different screen sizes 
* uses picture element which allows multiple sources for a element, can write media query in sources
* uses whatever image is set by media query, then uses a <img> for when media query does not apply

                    <picture class="footer__logo">
                        <source srcset="img/logo-green-small-1x.png 1x, img/logo-green-small-2x.png 2x" media="(max-width: 37.5em)">
                        <img srcset="img/logo-green-1x.png 1x, img/logo-green-2x.png 2x" alt="blahbalj" >
                    </picture>